$alignments: left, right, center !default;
$breakpoints: 576, 768, 1024, 1440, 1920, 2560;

@each $alignment in $alignments {
  .text-align--#{$alignment} {
    text-align: #{$alignment};
  }
}

@mixin flexContainer($direction: row, $justify: center, $align: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

@mixin gridContainer($cols: 1fr, $rows: 1fr, $row-gap:0, $col-gap: 0) {
  display: grid;
  grid-template-columns: $cols;
  grid-template-rows: $rows;
  gap: $row-gap $col-gap;
}

@mixin quadrangle($width, $height, $bg-color, $x, $y) {
  height: $height;
  width: $width;
  position: absolute;
  background-color: $bg-color;
  transform: translate($x, $y);
  z-index: -2;
}

@mixin backgroundImage($url, $x-position: center) {
  background-image: url($url);
  background-position-x: $x-position;
  background-size: cover;
}

@mixin textBackground($gradient-type, $color-stops, $direction: none) {
  @include backgroundClip();
  
  @if $gradient-type == linear {
    @include linearGradient($direction, $color-stops);
  } @else if $gradient-type == conic {
    @include conicGradient($color-stops);
  } @else if $gradient-type == radial {
    @include radialGradient($direction, $color-stops);
  } @else {
    @error "Unknown gradient type #{$gradient-type}.";
  }
}

@mixin backgroundClip() {
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

@mixin linearGradient($direction, $color-stops...) {
  background-image: linear-gradient($direction, $color-stops);
  background-image: -webkit-linear-gradient($direction, $color-stops);
}

@mixin conicGradient($color-stops...) {
  background-image: conic-gradient($color-stops);
  background-image: -webkit-conic-gradient($color-stops);
}

@mixin radialGradient($direction, $color-stops) {
  background-image: radial-gradient($direction, $color-stops);
  background-image: -webkit-radial-gradient($direction, $color-stops);
}

@mixin mediaQueries($image) {
  @each $breakpoint in $breakpoints {
    @media screen and (min-width: #{$breakpoint}px) {
      background-image: url("../../images/#{$image}-#{$breakpoint}w.jpg");
    }
  }
}

@mixin textStroke($width, $color) {
  -webkit-text-stroke-width: $width;
  -webkit-text-stroke-color: $color;
}

@mixin boxShadow($x, $y, $blur, $spread, $color) {
  box-shadow: $x $y $blur $spread $color;
}

@mixin textShadow($x, $y, $blur, $color) {
  text-shadow: $x $y $blur $color, $x -#{$y} $blur $color,
    -#{$x} $y $blur $color, -#{$x} -#{$y} $blur $color;
}

@mixin animation(
  $name,
  $duration,
  $delay: 0s,
  $iteration-count: 1,
  $timing-function: ease-in-out
) {
  animation: $name $duration $timing-function $iteration-count $delay;
}

@mixin fadeOut($delay: 0s, $duration: 0.75s, $timing-function: ease-out) {
  opacity: 0;
  transition: opacity $duration $delay $timing-function;
  will-change: opacity;
}

@mixin fadeIn {
  opacity: 1; 
}

@mixin fadeOutTo($direction, $offset, $delay: 0s, $duration: 0.75s, $timing-function: ease-out) {
  @if $direction == "top" or $direction == "bottom" {
    transform: translateY($offset);
  } @else {
    transform: translateX($offset);
  }

  opacity: 0;
  transition: transform $duration $delay $timing-function, 
    opacity $duration $delay $timing-function;
  will-change: transform, opacity;
}

@mixin fadeInFrom($direction) {
  opacity: 1; 
  @if $direction == "top" or $direction == "bottom" {
    transform: translateY(0);
  } @else {
    transform: translateX(0);
  }
}

@mixin foldToLeft($delay: 0s, $duration: 0.75s, $timing-function: ease-out) {
  width: 0;
  transition: width $duration $delay $timing-function;
  will-change: width;
}

@mixin foldToTop($delay: 0s, $duration: 0.75s, $timing-function: ease-out) {
  height: 0;
  transition: height $duration $delay $timing-function;
  will-change: height;
}

@mixin unfoldToRight($width) {
  width: $width;
}

@mixin unfoldToBottom($height) {
  height: $height;
}

.mx-auto {
  margin-right: auto;
  margin-left: auto;
}

@each $key, $unit in $spacing {
  .mx-#{$key} {
    margin-left: $unit;
    margin-right: $unit;
  }

  .my-#{$key} {
    margin-top: $unit;
    margin-bottom: $unit;
  }

  .mt-#{$key} {
    margin-top: $unit;
  }

  .mb-#{$key} {
    margin-bottom: $unit;
  }

  .px-#{$key} {
    padding-left: $unit;
    padding-right: $unit;
  }

  .py-#{$key} {
    padding-top: $unit;
    padding-bottom: $unit;
  }

  .pt-#{$key} {
    padding-top: $unit;
  }

  .pb-#{$key} {
    padding-bottom: $unit;
  }
}

.mb-none {
  margin-bottom: 0;
}
